# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: Deploy To Ec2

on:
  push:
    branches:
      - react

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Guthub Repo에 올린 파일을 불러오기
        uses: actions/checkout@v4

      - name: Test
        run: |
            ls
            pwd


      - name: JDK 17번전 설치
        uses: actions/setup-java@v4
        with:
           distribution: temurin
           java-version: 17

      - name: application-prod.properties
        run: echo "${{secrets.APPLICATION_PROPERTIES}}" > ./src/main/resources/application-prod.properties

      - name: 테스트 및 빌드
        run: ./gradlew clean build

      - name: 빌드된 파일 이름변경
        run: mv ./build/libs/*SNAPSHOT.jar ./project.jar
        
      - name: 실행권한 부여
        run: chmod +x scripts/*.sh

      - name: 압축하기
        run: tar -czvf $GITHUB_SHA.tar.gz project.jar appspec.yml scripts

      - name: AWS Resource에 접근할 수 있게 AWS credentials 설정
        uses: aws-actions/configure-aws-credentials@v4
        with:
           aws-region: ap-northeast-2
           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: S3에 프로젝트 폴더 업로드하기
        run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.tar.gz s3://diestribution/$GITHUB_SHA.tar.gz

      - name: Code Deploy를 활용해 EC2에 프로젝트 코드 배포
        run: |
             aws deploy create-deployment \
             --application-name ditribution \
             --deployment-config-name CodeDeployDefault.AllAtOnce \
             --deployment-group-name Production \
             --s3-location bucket=diestribution,bundleType=tgz,key=$GITHUB_SHA.tar.gz
